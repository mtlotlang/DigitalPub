
mtlot@DESKTOP-JC4DBPC MINGW64 ~/AppData/Local/Google/Cloud SDK
$ gcloud auth application-default login
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings > Manage App Execution Aliases.

mtlot@DESKTOP-JC4DBPC MINGW64 ~/AppData/Local/Google/Cloud SDK
$ ssh -i ~/.ssh/gpc mtlot@35.233.51.236
Enter passphrase for key '/c/Users/mtlot/.ssh/gpc':
Welcome to Ubuntu 20.04.4 LTS (GNU/Linux 5.13.0-1023-gcp x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Sun Apr 10 12:40:51 UTC 2022

  System load:  0.0               Users logged in:                  1
  Usage of /:   90.9% of 9.52GB   IPv4 address for br-29f11d63e417: 172.18.0.1
  Memory usage: 1%                IPv4 address for docker0:         172.17.0.1
  Swap usage:   0%                IPv4 address for ens4:            10.132.0.2
  Processes:    127

  => / is using 90.9% of 9.52GB

 * Super-optimized for small spaces - read how we shrank the memory
   footprint of MicroK8s to make it the smallest full K8s around.

   https://ubuntu.com/blog/microk8s-memory-optimisation

7 updates can be applied immediately.
To see these additional updates run: apt list --upgradable


Last login: Sun Apr 10 12:09:14 2022 from 41.190.245.205
(base) mtlot@instance-1:~$ cd DigitalPub/Data_Engineering_Zoomcamp/Week1BasicSetup/1_TERRAFORM_GCP
(base) mtlot@instance-1:~/DigitalPub/Data_Engineering_Zoomcamp/Week1BasicSetup/1_TERRAFORM_GCP$ export GOOGLE_APPLICATION_CREDENTIALS=/~.gc/disco-abacus-332810-697499b3020a.json^C
(base) mtlot@instance-1:~/DigitalPub/Data_Engineering_Zoomcamp/Week1BasicSetup/1_TERRAFORM_GCP$ client_loop: send disconnect: Connection reset by peer

mtlot@DESKTOP-JC4DBPC MINGW64 ~/AppData/Local/Google/Cloud SDK
$ ssh -i ~/.ssh/gpc mtlot@35.233.51.236
ssh: connect to host 35.233.51.236 port 22: No route to host

mtlot@DESKTOP-JC4DBPC MINGW64 ~/AppData/Local/Google/Cloud SDK
$ ssh -i ~/.ssh/gpc mtlot@35.233.51.236
ssh: connect to host 35.233.51.236 port 22: Connection timed out

mtlot@DESKTOP-JC4DBPC MINGW64 ~/AppData/Local/Google/Cloud SDK
$ ssh -i ~/.ssh/gpc mtlot@35.233.51.236
Enter passphrase for key '/c/Users/mtlot/.ssh/gpc':
Welcome to Ubuntu 20.04.4 LTS (GNU/Linux 5.13.0-1023-gcp x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Sun Apr 10 12:54:57 UTC 2022

  System load:  0.07              Users logged in:                  0
  Usage of /:   90.9% of 9.52GB   IPv4 address for br-29f11d63e417: 172.18.0.1
  Memory usage: 1%                IPv4 address for docker0:         172.17.0.1
  Swap usage:   0%                IPv4 address for ens4:            10.132.0.2
  Processes:    134

  => / is using 90.9% of 9.52GB

 * Super-optimized for small spaces - read how we shrank the memory
   footprint of MicroK8s to make it the smallest full K8s around.

   https://ubuntu.com/blog/microk8s-memory-optimisation

7 updates can be applied immediately.
To see these additional updates run: apt list --upgradable


Last login: Sun Apr 10 12:40:52 2022 from 41.190.245.205
(base) mtlot@instance-1:~$ cd DigitalPub/Data_Engineering_Zoomcamp/Week1BasicSetup/1_TERRAFORM_GCP
(base) mtlot@instance-1:~/DigitalPub/Data_Engineering_Zoomcamp/Week1BasicSetup/1_TERRAFORM_GCP$ export GOOGLE_APPLICATION_CREDENTIALS=~/.gc/disco-abacus-332810-69
7499b3020a.json
(base) mtlot@instance-1:~/DigitalPub/Data_Engineering_Zoomcamp/Week1BasicSetup/1_TERRAFORM_GCP$ gcloud auth activate-service-account --key-file $GOOGLE_APPLICATIO
N_CREDENTIAL
ERROR: (gcloud.auth.activate-service-account) argument --key-file: expected one argument
Usage: gcloud auth activate-service-account [ACCOUNT] --key-file=KEY_FILE [optional flags]
  optional flags may be  --help | --password-file | --prompt-for-password

For detailed information on this command and its flags, run:
  gcloud auth activate-service-account --help
(base) mtlot@instance-1:~/DigitalPub/Data_Engineering_Zoomcamp/Week1BasicSetup/1_TERRAFORM_GCP$ gcloud auth activate-service-account --key-file $GOOGLE_APPLICATION_CREDENTIALS
Activated service account credentials for: [dtc-de-user@disco-abacus-332810.iam.gserviceaccount.com]
(base) mtlot@instance-1:~/DigitalPub/Data_Engineering_Zoomcamp/Week1BasicSetup/1_TERRAFORM_GCP$ terraform init
Terraform initialized in an empty directory!

The directory has no Terraform configuration files. You may begin working
with Terraform immediately by creating Terraform configuration files.
(base) mtlot@instance-1:~/DigitalPub/Data_Engineering_Zoomcamp/Week1BasicSetup/1_TERRAFORM_GCP$ ls
terraform
(base) mtlot@instance-1:~/DigitalPub/Data_Engineering_Zoomcamp/Week1BasicSetup/1_TERRAFORM_GCP$ cd terraform
(base) mtlot@instance-1:~/DigitalPub/Data_Engineering_Zoomcamp/Week1BasicSetup/1_TERRAFORM_GCP/terraform$ ls
main.tf  variables.tf
(base) mtlot@instance-1:~/DigitalPub/Data_Engineering_Zoomcamp/Week1BasicSetup/1_TERRAFORM_GCP/terraform$ terraform init

Initializing the backend...

Successfully configured the backend "local"! Terraform will automatically
use this backend unless the backend configuration changes.

Initializing provider plugins...
- Finding latest version of hashicorp/google...
- Installing hashicorp/google v4.16.0...
- Installed hashicorp/google v4.16.0 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
(base) mtlot@instance-1:~/DigitalPub/Data_Engineering_Zoomcamp/Week1BasicSetup/1_TERRAFORM_GCP/terraform$ terraform plan
var.project
  disco-abacus-332810

  Enter a value: 19867


Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # google_bigquery_dataset.dataset will be created
  + resource "google_bigquery_dataset" "dataset" {
      + creation_time              = (known after apply)
      + dataset_id                 = "trips_data_all"
      + delete_contents_on_destroy = false
      + etag                       = (known after apply)
      + id                         = (known after apply)
      + last_modified_time         = (known after apply)
      + location                   = "europe-west6"
      + project                    = "19867"
      + self_link                  = (known after apply)

      + access {
          + domain         = (known after apply)
          + group_by_email = (known after apply)
          + role           = (known after apply)
          + special_group  = (known after apply)
          + user_by_email  = (known after apply)

          + dataset {
              + target_types = (known after apply)

              + dataset {
                  + dataset_id = (known after apply)
                  + project_id = (known after apply)
                }
            }

          + view {
              + dataset_id = (known after apply)
              + project_id = (known after apply)
              + table_id   = (known after apply)
            }
        }
    }

  # google_storage_bucket.data-lake-bucket will be created
  + resource "google_storage_bucket" "data-lake-bucket" {
      + force_destroy               = true
      + id                          = (known after apply)
      + location                    = "EUROPE-WEST6"
      + name                        = "dtc_data_lake_19867"
      + project                     = (known after apply)
      + self_link                   = (known after apply)
      + storage_class               = "STANDARD"
      + uniform_bucket_level_access = true
      + url                         = (known after apply)

      + lifecycle_rule {
          + action {
              + type = "Delete"
            }

          + condition {
              + age                   = 30
              + matches_storage_class = []
              + with_state            = (known after apply)
            }
        }

      + versioning {
          + enabled = true
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
(base) mtlot@instance-1:~/DigitalPub/Data_Engineering_Zoomcamp/Week1BasicSetup/1_TERRAFORM_GCP/terraform$
(base) mtlot@instance-1:~$ sudo shutdown now
Connection to 35.233.51.236 closed by remote host.
Connection to 35.233.51.236 closed